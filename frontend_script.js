var x = document.getElementById("info");
Location();
var setPost = setInterval(Location, 30000);
var timezone = 8;   // Singapore timezone: GMT+8

/**
 * checks if browser has geolocation enabled. Use HTML5 geolocation API 
 * if possible (ie. user gave permission), else use ip address lookup
 */
function Location() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPositionGeolocation, function(error) {
            showPositionIPLookup();
        });
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}

/**
 * gets location information with HTML5 geolocation API and browser information
 * time is set to variable timezone
 */
function showPositionGeolocation(position) {
    var lat = position.coords.latitude;
    var lon = position.coords.longitude;
    x.innerHTML = "Latitude: " + lat + "<br>Longitude: " + lon;
    getFingerprintAndPost(position.coords.latitude, position.coords.longitude, 
            position.coords.altitude, position.coords.accuracy,
            position.coords.heading, position.coords.speed);
}

/**
 * gets location information with ip address lookup and browser information
 * time is set to variable timezone
 * -1 accuracy means location is likely to be inaccurate
 */
function showPositionIPLookup() { 
    var lat = geoplugin_latitude();
    var lon = geoplugin_longitude();
    x.innerHTML = "Latitude: " + lat + "<br>Longitude: " + lon;
    getFingerprintAndPost(geoplugin_latitude(), geoplugin_longitude(), null,
            -1, null, null);
}

/**
 * returns date and time offset to specified timezone in format YYYY-MM-DD hh:mm:ss
 */
function getTime(utcOffset) {
    return moment.utc().add(utcOffset, 'hours').format('YYYY-MM-DD HH:mm:ss');
}

/**
 * get fingerprint of device using FingerprintJS2 library class and pass data to postJson method
 */
function getFingerprintAndPost(lat, lon, alt, acc, heading, speed) {
    new Fingerprint2().get(function(fp) {
        postJson(getTime(timezone), lat, lon, alt, acc, heading, speed, getHost(), 
                window.navigator.language, checkOS(), fp);
    });
}

/**
 * returns parent's hostname if ad is on a different domain from the visited site
 */
function getHost() {
    return (window.location != window.parent.location) ? 
        getHostName(document.referrer) : document.location.hostname;
}

/**
 * returns only the hostname from a url
 */
function getHostName(url) {
    var a = document.createElement('a');
    a.href = url;
    return a.hostname;
}

/**
 * checks the OS from the userAgent header of the browser
 */
function checkOS() {
    var OSName = "Unknown";
    if (window.navigator.userAgent.indexOf("Windows NT 10.0")!= -1) OSName="Windows 10";
    if (window.navigator.userAgent.indexOf("Windows NT 6.2") != -1) OSName="Windows 8";
    if (window.navigator.userAgent.indexOf("Windows NT 6.1") != -1) OSName="Windows 7";
    if (window.navigator.userAgent.indexOf("Windows NT 6.0") != -1) OSName="Windows Vista";
    if (window.navigator.userAgent.indexOf("Windows NT 5.1") != -1) OSName="Windows XP";
    if (window.navigator.userAgent.indexOf("Windows NT 5.0") != -1) OSName="Windows 2000";
    if (window.navigator.userAgent.indexOf("Mac")            != -1) OSName="Mac/iOS";
    if (window.navigator.userAgent.indexOf("X11")            != -1) OSName="UNIX";
    if (window.navigator.userAgent.indexOf("Linux")          != -1) OSName="Linux";
    return OSName;
}

/**
 * sends data to url specified
 * @param {*} dateTimeNow currnt time stamp 
 * @param {*} lat latitude
 * @param {*} lon longitude
 * @param {*} altitude height of device (if available)
 * @param {*} accuracy accuracy of geolocation (if available)
 * @param {*} heading direction of movement (if available)
 * @param {*} speed speed of movement (if available)
 * @param {*} host host name of current website
 * @param {*} lang browser default language
 * @param {*} os operating system
 * @param {*} fingerprint fingerprint generated by FingerprintJS2 library
 */
function postJson(dateTimeNow, lat, lon, altitude, accuracy, heading, speed, host, lang, os, fingerprint) {
    var data = addData(dateTimeNow, lat, lon, altitude, accuracy, heading, speed, host, lang, os, fingerprint);
    $.ajax({
        type: 'POST',
        data: JSON.stringify(data),
        contentType: 'application/json',
        url: "/data"         
    });
}

/**
 * adds data into a dictionary to be sent to server
 * @param {*} dateTimeNow currnt time stamp 
 * @param {*} lat latitude
 * @param {*} lon longitude
 * @param {*} altitude height of device (if available)
 * @param {*} accuracy accuracy of geolocation (if available)
 * @param {*} heading direction of movement (if available)
 * @param {*} speed speed of movement (if available)
 * @param {*} host host name of current website
 * @param {*} lang browser default language
 * @param {*} os operating system
 * @param {*} fingerprint fingerprint generated by FingerprintJS2 library
 */
function addData(dateTimeNow, lat, lon, altitude, accuracy, heading, speed, host, lang, os,fingerprint) {
    var data = {};
    data.ts = dateTimeNow;
    data.device = checkCookie();
    data.lat = lat;
    data.lon = lon;
    data.altitude = altitude;
    data.accuracy = accuracy;
    data.heading = heading;
    data.speed = speed;
    data.host = host;
    data.lang = lang;
    data.os = os;
    data.fingerprint = fingerprint;
    return data;
}

/**
 * look for cookie. if present, the user has seen the ad before
 * @param {*} cname name of cookie to search for 
 */
function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

/**
 * if cookie is not present, get the next cookie to assign to him (max value of cookie + 1)
 * if present, continue to use that cookie to uniquely identify the user.
 */
function checkCookie() {
    var uniqueDeviceId = getCookie("deviceUniqueId");
    if (uniqueDeviceId == "") {
        $.ajax({
            async: false,
            url: 'maxdevice',
            success: function(data) {
                uniqueDeviceId = data;
            }
        });
        setCookie("deviceUniqueId", uniqueDeviceId, 365);
    }
    uniqueDeviceId = parseInt(uniqueDeviceId) + 1;
    return uniqueDeviceId;
}

/**
 * add cookie for user to identify in future
 * @param {*} cname name of cookie to assign
 * @param {*} cvalue cookie id of user
 * @param {*} exdays number of days till cookie expiry
 */
function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+ d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}
