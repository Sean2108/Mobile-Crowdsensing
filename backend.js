var mysql = require('mysql');
var express = require('express');
var bodyParser = require('body-parser');
var path = require('path');

const app = express();

/**
 * connect to db to check if it exists. if it does not exist, create it
 */
var con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: ""
});

con.connect((err) => {
    if (err) throw err;
    con.query("CREATE DATABASE IF NOT EXISTS ad_latlon", (err, result) => {
        if (err) throw err;
    });
});

/**
 * connect to the database
 */
con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "ad_latlon"
});

var maxDeviceId;

/**
 * create table if it does not exist, and get the max value of cookie id (to assign to next new visitor)
 */
con.connect((err) => {
    if (err) throw err;
    console.log("Getting current device max value...");
    var sql = "CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, device INT, fingerprint VARCHAR(255), ts TIMESTAMP(0), lat DOUBLE, lon DOUBLE, alt DOUBLE, acc DOUBLE, heading DOUBLE, speed DOUBLE, host VARCHAR(255), lang VARCHAR(255), os VARCHAR(255))";
    con.query(sql, (err, result) => {
        if (err) throw err;
        console.log("Table created");
    });

    con.query("SELECT COALESCE(MAX(device), -1) AS device FROM users", 
            (err, results, fields) => {
                if (err) throw err;
                maxDeviceId = results[0].device;
            });

});

app.use(bodyParser.json());
app.use(express.static(__dirname));

var htmlPath = path.join(__dirname + '/frontend.html');

/**
 * return maxDeviceId for frontend to access and assign to new visitors
 */
app.get('/maxdevice', function(request, response) {
    response.status(200).send(maxDeviceId.toString());
});

/**
 * sends html file to be displayed to client
 */
app.get('/', function(request, response) {
    response.sendFile(htmlPath);
});

/**
 * receive response from client and add collected information to database
 */
app.post('/', function(request, response){
    response.sendFile(htmlPath);
    var time = request.body.ts;
    var device = request.body.device;
    var fingerprint = request.body.fingerprint;
    var lat = request.body.lat;
    var lon = request.body.lon;
    var altitude = request.body.altitude;
    var accuracy = request.body.accuracy;
    var heading = request.body.heading;
    var speed = request.body.speed;
    var host = request.body.host;
    var lang = request.body.lang;
    var os = request.body.os;

    if (lat && lon) console.log("time: " + time + ", device: " + device + ', fingerprint: ' + fingerprint + ', lat: ' + lat + ", lon: " + lon);
    console.log("alt: " + altitude + ", acc: " + accuracy + ", heading: " + heading + ", speed: " + speed + ", host: " + host + ", lang: " + lang + ", os: " + os);
    addRecord(time, device, fingerprint, lat, lon, altitude, accuracy, heading, speed, host, lang, os);
});

/**
 * helper method to add record to database
 * @param {*} time currnt time stamp 
 * @param {*} device unique device id from cookie
 * @param {*} fingerprint unique browser fingerprint generated by FingerprintJS2 library
 * @param {*} lat latitude
 * @param {*} lon longitude
 * @param {*} altitude height of device (if available)
 * @param {*} accuracy accuracy of geolocation (if available)
 * @param {*} heading direction of movement (if available)
 * @param {*} speed speed of movement (if available)
 * @param {*} host host name of current website
 * @param {*} lang browser default language
 * @param {*} os operating system
 */
function addRecord(time, device, fingerprint, lat, lon, altitude, accuracy, heading, speed, host, lang, os) {
    console.log("Adding record...");
    var sql = "INSERT INTO users SET ts = ?, device = ?, fingerprint = ?, lat = ?, lon = ?, alt = ?, acc = ?, heading = ?, speed = ?, host = ?, lang = ?, os = ?";
    con.query(sql, [time, device, fingerprint, lat, lon, altitude, accuracy, heading, speed, host, lang, os]);
}

app.listen(8000, '0.0.0.0');//'localhost' || '10.100.47.194');
console.log("running at port 8000");
